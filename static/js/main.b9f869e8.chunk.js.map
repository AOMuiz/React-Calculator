{"version":3,"sources":["components/Button.jsx","components/Input.jsx","components/ClearButton.jsx","App.js","index.js"],"names":["Button","props","id","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","addToInput","setState","state","placeholder","handleEqual","math","handleClr","handleClrLast","removelast","toString","slice","Number","type","value","this","class","href","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9f869e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst isOperator = val => {\r\n    return !isNaN(val) || val === \".\" || val === \"=\";\r\n}\r\n\r\nconst Button = props => (\r\n    <button id = {props.id} className = {`button-wrapper \r\n        ${isOperator(props.children) ? null : \"operator\"\r\n        }`}\r\n        onClick = {() => props.handleClick(props.children)}\r\n        >\r\n        {props.children}\r\n    </button>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\nimport \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n        return (\r\n            <div id = {props.id} className = \"input\">\r\n                {props.input}\r\n            </div>\r\n        )\r\n}\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./ClearButton.css\";\r\n\r\nexport default function ClearButton(props) {\r\n  return (\r\n    <button id={props.id} className='clear-btn' onClick={props.handleClear}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport * as math from \"mathjs\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      placeholder: null,\n    };\n  }\n\n  addToInput = (val) => {\n    this.setState({\n      input: this.state.input + val,\n      placeholder: null,\n    });\n  };\n\n  handleEqual = () => {\n    this.setState({ input: math.evaluate(this.state.input) });\n  };\n\n  handleClr = () => {\n    this.setState({\n      input: \"\",\n      placeholder: 0,\n    });\n  };\n\n  handleClrLast = () => {\n    let removelast = this.state.input.toString().slice(0, -1);\n    // removelast = removelast.substring(0, removelast.length - 1);\n    // removelast = removelast.toString();\n    // removelast = removelast.slice(0, -1);\n    removelast = Number(removelast);\n    this.setState({\n      input: removelast,\n    });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <div className='calc-wrapper'>\n          <Input\n            id='display'\n            type='number'\n            value={0}\n            input={this.state.input || this.state.placeholder}></Input>\n          <div className='row'>\n            <Button id='seven' handleClick={this.addToInput}>\n              7\n            </Button>\n            <Button id='eight' handleClick={this.addToInput}>\n              8\n            </Button>\n            <Button id='nine' handleClick={this.addToInput}>\n              9\n            </Button>\n            <Button id='divide' handleClick={this.addToInput}>\n              /\n            </Button>\n          </div>\n          <div className='row'>\n            <Button id='four' handleClick={this.addToInput}>\n              4\n            </Button>\n            <Button id='five' handleClick={this.addToInput}>\n              5\n            </Button>\n            <Button id='six' handleClick={this.addToInput}>\n              6\n            </Button>\n            <Button id='multiply' handleClick={this.addToInput}>\n              *\n            </Button>\n          </div>\n          <div className='row'>\n            <Button id='three' handleClick={this.addToInput}>\n              3\n            </Button>\n            <Button id='two' handleClick={this.addToInput}>\n              2\n            </Button>\n            <Button id='one' handleClick={this.addToInput}>\n              1\n            </Button>\n            <Button id='add' handleClick={this.addToInput}>\n              +\n            </Button>\n          </div>\n          <div className='row'>\n            <Button id='decimal' handleClick={this.addToInput}>\n              .\n            </Button>\n            <Button id='zero' handleClick={this.addToInput}>\n              0\n            </Button>\n            <Button id='equals' handleClick={this.handleEqual}>\n              =\n            </Button>\n            <Button id='subtract' handleClick={this.addToInput}>\n              -\n            </Button>\n          </div>\n          <div className='row'>\n            <ClearButton id='clear' handleClear={this.handleClr}>\n              Clear\n            </ClearButton>\n            <ClearButton id='clr-last' handleClear={this.handleClrLast}>\n              CE\n            </ClearButton>\n          </div>\n          <footer class='footer-distributed'>\n            <p>\n              <a href='https://github.com/AOMuiz'>AOMuiz</a> &copy; 2020 ||\n              Created Using React and <a href='https://mathjs.org/'>MathJs</a>\n            </p>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}